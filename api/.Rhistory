install.packages(c("plumber","tidyverse","DBI","RMariaDB","jsonlite","config","jose","plotly","RCurl","stringdist","xlsx","pool"))
install.packages(c("plumber","tidyverse","DBI","RMariaDB","jsonlite","config","jose","plotly","RCurl","stringdist","xlsx","pool"))
install.packages("PurBayes")
library("PurBayes")
library("PurBayes")
####numeric vector of total reads for each somatic mutation from the tumor tissue NGS data
N3004301 <- c(1135,703,1042,532,1076,616,367,647,349,149,655)
####numeric vector of mutant allele supporting read counts for each somatic mutation from the tumor tissue NGS data
Y3004301 <- c(459,279,215,98,194,112,66,111,67,22,60)
PB.tsc3004301<-PurBayes(N3004301,Y3004301)
summary(PB.tsc3004301)
library("PurBayes")
####numeric vector of total reads for each somatic mutation from the tumor tissue NGS data
N3004301 <- c(1042,532,1076,616,367,647,349,149,655)
####numeric vector of mutant allele supporting read counts for each somatic mutation from the tumor tissue NGS data
Y3004301 <- c(215,98,194,112,66,111,67,22,60)
PB.tsc3004301<-PurBayes(N3004301,Y3004301)
summary(PB.tsc3004301)
library("PurBayes")
####numeric vector of total reads for each somatic mutation from the tumor tissue NGS data
N3004301 <- c(1042,532,1076,616,367,647,349,149)
####numeric vector of mutant allele supporting read counts for each somatic mutation from the tumor tissue NGS data
Y3004301 <- c(215,98,194,112,66,111,67,22)
PB.tsc3004301<-PurBayes(N3004301,Y3004301)
summary(PB.tsc3004301)
library("PurBayes")
####numeric vector of total reads for each somatic mutation from the tumor tissue NGS data
N3004301 <- c(1042,532,1076,616,367,647,349,149)
####numeric vector of mutant allele supporting read counts for each somatic mutation from the tumor tissue NGS data
Y3004301 <- c(215,98,194,112,66,111,67,22)
PB.tsc3004301<-PurBayes(N3004301,Y3004301)
summary(PB.tsc3004301)
# sysndd_plumber.R
## to do: adapt "serializer json list(na="null")"
## to do: add pool library for connection managment
##-------------------------------------------------------------------##
# load libraries
library(plumber)
library(tidyverse)
library(DBI)
library(RMariaDB)
library(jsonlite)
library(config)
library(jose)
library(plotly)
library(RCurl)
library(stringdist)
library(xlsx)
library(easyPubMed)
library(rvest)
library(lubridate)
library(pool)
library(memoise)
library(coop)
##-------------------------------------------------------------------##
##-------------------------------------------------------------------##
dw <- config::get("sysndd_db_local")
##-------------------------------------------------------------------##
##-------------------------------------------------------------------##
pool <- dbPool(
drv = RMariaDB::MariaDB(),
dbname = dw$dbname,
host = dw$host,
user = dw$user,
password = dw$password,
server = dw$server,
port = dw$port
)
##-------------------------------------------------------------------##
fromJSON('{"entity":2,"synopsis":null,"literature":{"additional_references":[],"gene_review":["PMID:20301486"]},"phenotypes":{"phenotype_id":[],"modifier_id":[]},"comment":"test%20test"}')
review_data <- fromJSON('{"entity":2,"synopsis":null,"literature":{"additional_references":[],"gene_review":["PMID:20301486"]},"phenotypes":{"phenotype_id":[],"modifier_id":[]},"comment":"test%20test"}')
sysnopsis_received <- as_tibble(review_data$synopsis) %>%
add_column(review_data$entity) %>%
add_column(review_data$comment) %>%
add_column(review_user_id) %>%
select(entity_id = `review_data$entity`, synopsis = value, review_user_id, comment = `review_data$comment`)
review_user_id <- 1
sysnopsis_received <- as_tibble(review_data$synopsis) %>%
add_column(review_data$entity) %>%
add_column(review_data$comment) %>%
add_column(review_user_id) %>%
select(entity_id = `review_data$entity`, synopsis = value, review_user_id, comment = `review_data$comment`)
as_tibble(review_data$synopsis) %>%
add_column(review_data$entity) %>%
add_column(review_data$comment)
View(as_tibble(review_data$synopsis) %>%
add_column(review_data$entity) %>%
add_column(review_data$comment))
review_data$synopsis
as_tibble(review_data$synopsis) %>%
add_column(review_data$entity) %>%
add_column(review_data$comment)
review_data
review_data$comment
review_data <- fromJSON('{"entity":2,"synopsis":"null","literature":{"additional_references":[],"gene_review":["PMID:20301486"]},"phenotypes":{"phenotype_id":[],"modifier_id":[]},"comment":"test%20test"}')
as_tibble(review_data$synopsis) %>%
add_column(review_data$entity) %>%
add_column(review_data$comment)
############################################
## load libraries
library(googlesheets4)	##needed as interface to google sheets
library(easyPubMed)		##needed for pubmed queries
library(readxl)
library(Rmisc)
library(ggrepel)
library(cowplot)
library(tidyverse)		##needed for general table operations
library(plumber)
setwd("C:/development/HNF1B-db/api")
# hnf1b-db_plumber.R
## to do: adapt "serializer json list(na="null")"
##-------------------------------------------------------------------##
# load libraries
library(plumber)
library(tidyverse)
library(DBI)
library(RMariaDB)
library(jsonlite)
library(config)
library(jose)
library(plotly)
library(RCurl)
library(stringdist)
library(xlsx)
library(easyPubMed)
library(rvest)
library(lubridate)
library(pool)
library(memoise)
library(coop)
##-------------------------------------------------------------------##
##-------------------------------------------------------------------##
dw <- config::get("hnf1b_db_local")
##-------------------------------------------------------------------##
##-------------------------------------------------------------------##
pool <- dbPool(
drv = RMariaDB::MariaDB(),
dbname = dw$dbname,
host = dw$host,
user = dw$user,
password = dw$password,
server = dw$server,
port = dw$port
)
##-------------------------------------------------------------------##
hnf1b_db_publications <- (pool %>%
tbl("publication") %>%
collect()
)
hnf1b_db_publications <- pool %>%
tbl("publication") %>%
collect()
View(hnf1b_db_publications )
##-------------------------------------------------------------------##
## Statistics endpoints
#* @tag statistics
## get statistics of the database entries
#* @serializer json list(na="string")
#' @get /api/statistics
function() {
# get statistics from the statistics view
statistics <- pool %>%
tbl("statistics") %>%
collect()
statistics
}
#* @tag statistics
## get statistics of the database entries
#* @serializer json list(na="string")
#' @get /api/statistics/publications_plot
function() {
# get publication from the publication view
hnf1b_db_publications <- pool %>%
tbl("publication") %>%
select(publication_id, publication_type, publication_date) %>%
collect()
hnf1b_db_publications
hnf1b_db_publications <- pool %>%
tbl("publication") %>%
select(publication_id, publication_type, publication_date) %>%
collect()
hnf1b_db_publications
hnf1b_db_publications <- pool %>%
tbl("publication") %>%
select(publication_id, publication_type, publication_date) %>%
collect()
hnf1b_db_publications
hnf1b_db_publications <- pool %>%
tbl("publication") %>%
select(publication_id, publication_type, publication_date) %>%
collect() %>%
filter(publication_date != "NULL")
ggplot(data = hnf1b_db_publications , aes(x = publication_date, color = publication_type)) +
stat_bin(data=subset(hnf1b_db_publications, category=="research"), aes(y=cumsum(..count..)), geom="step", bins = 30)
ggplot(data = hnf1b_db_publications , aes(x = publication_date, color = publication_type)) +
stat_bin(data=subset(hnf1b_db_publications, publication_type=="research"), aes(y=cumsum(..count..)), geom="step", bins = 30)
hnf1b_db_publications <- pool %>%
tbl("publication") %>%
select(publication_id, publication_type, publication_date) %>%
collect() %>%
filter(publication_date != "NULL") %>%
mutate(publication_date = as.Date(publication_date))
hnf1b_db_publications	hnf1b_db_publications <- pool %>%
tbl("publication") %>%
select(publication_id, publication_type, publication_date) %>%
collect() %>%
filter(publication_date != "NULL") %>%
mutate(publication_date = as.Date(publication_date))
hnf1b_db_publications
hnf1b_db_publications <- pool %>%
tbl("publication") %>%
select(publication_id, publication_type, publication_date) %>%
collect() %>%
filter(publication_date != "NULL") %>%
mutate(publication_date = as.Date(publication_date))
hnf1b_db_publications
ggplot(data = hnf1b_db_publications , aes(x = publication_date, color = publication_type)) +
stat_bin(data=subset(hnf1b_db_publications, publication_type=="research"), aes(y=cumsum(..count..)), geom="step", bins = 30)
hnf1b_db_publications %>% select(publication_type) %>% unique()
ggplot(data = hnf1b_db_publications , aes(x = publication_date, color = publication_type)) +
stat_bin(data=subset(hnf1b_db_publications, publication_type=="research"), aes(y=cumsum(..count..)), geom="step", bins = 30) +
stat_bin(data=subset(hnf1b_db_publications, publication_type=="case_series"), aes(y=cumsum(..count..)), geom="step", bins = 30) +
stat_bin(data=subset(hnf1b_db_publications, publication_type=="case_report"), aes(y=cumsum(..count..)), geom="step", bins = 30) +
theme_classic() +
theme(axis.text.x = element_text(angle = -45, hjust = 0), axis.title.x = element_blank(), axis.title.y = element_blank(), legend.position="top", legend.title = element_blank())
ggplot(data = hnf1b_db_publications , aes(x = publication_date, color = publication_type)) +
stat_bin(data=subset(hnf1b_db_publications, publication_type=="research"), aes(y=cumsum(..count..)), geom="step", bins = 30) +
stat_bin(data=subset(hnf1b_db_publications, publication_type=="case_series"), aes(y=cumsum(..count..)), geom="step", bins = 30) +
stat_bin(data=subset(hnf1b_db_publications, publication_type=="case_report"), aes(y=cumsum(..count..)), geom="step", bins = 30) +
stat_bin(data=subset(hnf1b_db_publications, publication_type=="screening_multiple"), aes(y=cumsum(..count..)), geom="step", bins = 30) +
theme_classic() +
theme(axis.text.x = element_text(angle = -45, hjust = 0), axis.title.x = element_blank(), axis.title.y = element_blank(), legend.position="top", legend.title = element_blank())
ggplot(data = hnf1b_db_publications , aes(x = publication_date, color = publication_type)) +
stat_bin(data=subset(hnf1b_db_publications, ), aes(y=cumsum(..count..)), geom="step", bins = 30) +
stat_bin(data=subset(hnf1b_db_publications, publication_type=="research"), aes(y=cumsum(..count..)), geom="step", bins = 30) +
stat_bin(data=subset(hnf1b_db_publications, publication_type=="case_series"), aes(y=cumsum(..count..)), geom="step", bins = 30) +
stat_bin(data=subset(hnf1b_db_publications, publication_type=="case_report"), aes(y=cumsum(..count..)), geom="step", bins = 30) +
stat_bin(data=subset(hnf1b_db_publications, publication_type=="screening_multiple"), aes(y=cumsum(..count..)), geom="step", bins = 30) +
theme_classic() +
theme(axis.text.x = element_text(angle = -45, hjust = 0), axis.title.x = element_blank(), axis.title.y = element_blank(), legend.position="top", legend.title = element_blank())
make_publications_plot <- function(data_tibble) {
plot <- ggplot(data = hnf1b_db_publications , aes(x = publication_date, color = publication_type)) +
stat_bin(data=subset(hnf1b_db_publications, publication_type=="research"), aes(y=cumsum(..count..)), geom="step", bins = 30) +
stat_bin(data=subset(hnf1b_db_publications, publication_type=="case_series"), aes(y=cumsum(..count..)), geom="step", bins = 30) +
stat_bin(data=subset(hnf1b_db_publications, publication_type=="case_report"), aes(y=cumsum(..count..)), geom="step", bins = 30) +
stat_bin(data=subset(hnf1b_db_publications, publication_type=="screening_multiple"), aes(y=cumsum(..count..)), geom="step", bins = 30) +
theme_classic() +
theme(axis.text.x = element_text(angle = -45, hjust = 0), axis.title.x = element_blank(), axis.title.y = element_blank(), legend.position="top", legend.title = element_blank())
ggplot(data = hnf1b_db_publications , aes(x = publication_date, color = publication_type)) +
stat_bin(data=subset(hnf1b_db_publications, publication_type=="research"), aes(y=cumsum(..count..)), geom="step", bins = 30) +
stat_bin(data=subset(hnf1b_db_publications, publication_type=="case_series"), aes(y=cumsum(..count..)), geom="step", bins = 30) +
stat_bin(data=subset(hnf1b_db_publications, publication_type=="case_report"), aes(y=cumsum(..count..)), geom="step", bins = 30) +
stat_bin(data=subset(hnf1b_db_publications, publication_type=="screening_multiple"), aes(y=cumsum(..count..)), geom="step", bins = 30) +
theme_classic() +
theme(axis.text.x = element_text(angle = -45, hjust = 0), axis.title.x = element_blank(), axis.title.y = element_blank(), legend.position="top", legend.title = element_blank())
hnf1b_db_publications %>% select(publication_type) %>% unique()
ggplot(data = hnf1b_db_publications , aes(x = publication_date, color = publication_type)) +
stat_bin(data=subset(hnf1b_db_publications, publication_type=="research"), aes(y=cumsum(..count..)), geom="step", bins = 30) +
stat_bin(data=subset(hnf1b_db_publications, publication_type=="case_series"), aes(y=cumsum(..count..)), geom="step", bins = 30) +
stat_bin(data=subset(hnf1b_db_publications, publication_type=="case_report"), aes(y=cumsum(..count..)), geom="step", bins = 30) +
stat_bin(data=subset(hnf1b_db_publications, publication_type=="screening_multiple"), aes(y=cumsum(..count..)), geom="step", bins = 30) +
stat_bin(data=subset(hnf1b_db_publications, publication_type=="review_and_cases"), aes(y=cumsum(..count..)), geom="step", bins = 30) +
theme_classic() +
theme(axis.text.x = element_text(angle = -45, hjust = 0), axis.title.x = element_blank(), axis.title.y = element_blank(), legend.position="top", legend.title = element_blank())
ggplot(data = hnf1b_db_publications , aes(x = publication_date, color = publication_type)) +
stat_bin(data=subset(hnf1b_db_publications, publication_type=="research"), aes(y=cumsum(..count..)), geom="step", bins = 30) +
stat_bin(data=subset(hnf1b_db_publications, publication_type=="case_series"), aes(y=cumsum(..count..)), geom="step", bins = 30) +
stat_bin(data=subset(hnf1b_db_publications, publication_type=="case_report"), aes(y=cumsum(..count..)), geom="step", bins = 30) +
stat_bin(data=subset(hnf1b_db_publications, publication_type=="screening_multiple"), aes(y=cumsum(..count..)), geom="step", bins = 30) +
stat_bin(data=subset(hnf1b_db_publications, publication_type=="review_and_cases"), aes(y=cumsum(..count..)), geom="step", bins = 30) +
theme_classic() +
theme(axis.text.x = element_text(angle = -45, hjust = 0), axis.title.x = element_blank(), axis.title.y = element_blank(), legend.position="right", legend.title = element_blank())
